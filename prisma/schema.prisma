generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  user_id      Int           @id @default(autoincrement())
  username     String        @db.VarChar(50)
  password     String        @db.VarChar(255)
  first_name   String        @db.VarChar(50)
  last_name    String        @db.VarChar(50)
  email        String        @unique @db.VarChar(100)
  phone_number String        @db.VarChar(15)
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  user_roles   user_role[]   @relation("UserToRoles") 
  invites_sent invite_tokens[] @relation("CreatedInvites")
}

model roles {
  role_id     Int           @id @default(autoincrement())
  role_name   String        @unique @db.VarChar(50)
  user_roles  user_role[]   @relation("RoleToUsers") 
}

model user_role {
  user_role_id Int      @id @default(autoincrement())
  user_id      Int
  role_id      Int
  assigned_at  DateTime @default(now())

  users users @relation(fields: [user_id], references: [user_id], name: "UserToRoles")
  roles roles @relation(fields: [role_id], references: [role_id], name: "RoleToUsers")

  @@unique([user_id, role_id])
}

model invite_tokens {
  id            Int      @id @default(autoincrement())
  token         String   @unique
  email         String
  role          String
  account_id    Int?     // Nullable if not applicable
  region_id     Int?     // Nullable if not applicable
  facility_id   Int?     // Nullable if not applicable
  created_by    Int
  expires_at    DateTime
  used          Boolean  @default(false)
  created_at    DateTime @default(now())

  user_created_by users @relation("CreatedInvites", fields: [created_by], references: [user_id])
}